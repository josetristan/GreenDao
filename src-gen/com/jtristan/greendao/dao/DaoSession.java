package com.jtristan.greendao.dao;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.DaoConfig;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.IdentityScopeType;

import com.jtristan.greendao.dao.Pedido;
import com.jtristan.greendao.dao.Linea;
import com.jtristan.greendao.dao.CondicionPago;
import com.jtristan.greendao.dao.CondicionPagoDeUnPedido;

import com.jtristan.greendao.dao.PedidoDao;
import com.jtristan.greendao.dao.LineaDao;
import com.jtristan.greendao.dao.CondicionPagoDao;
import com.jtristan.greendao.dao.CondicionPagoDeUnPedidoDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig pedidoDaoConfig;
    private final DaoConfig lineaDaoConfig;
    private final DaoConfig condicionPagoDaoConfig;
    private final DaoConfig condicionPagoDeUnPedidoDaoConfig;

    private final PedidoDao pedidoDao;
    private final LineaDao lineaDao;
    private final CondicionPagoDao condicionPagoDao;
    private final CondicionPagoDeUnPedidoDao condicionPagoDeUnPedidoDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        pedidoDaoConfig = daoConfigMap.get(PedidoDao.class).clone();
        pedidoDaoConfig.initIdentityScope(type);

        lineaDaoConfig = daoConfigMap.get(LineaDao.class).clone();
        lineaDaoConfig.initIdentityScope(type);

        condicionPagoDaoConfig = daoConfigMap.get(CondicionPagoDao.class).clone();
        condicionPagoDaoConfig.initIdentityScope(type);

        condicionPagoDeUnPedidoDaoConfig = daoConfigMap.get(CondicionPagoDeUnPedidoDao.class).clone();
        condicionPagoDeUnPedidoDaoConfig.initIdentityScope(type);

        pedidoDao = new PedidoDao(pedidoDaoConfig, this);
        lineaDao = new LineaDao(lineaDaoConfig, this);
        condicionPagoDao = new CondicionPagoDao(condicionPagoDaoConfig, this);
        condicionPagoDeUnPedidoDao = new CondicionPagoDeUnPedidoDao(condicionPagoDeUnPedidoDaoConfig, this);

        registerDao(Pedido.class, pedidoDao);
        registerDao(Linea.class, lineaDao);
        registerDao(CondicionPago.class, condicionPagoDao);
        registerDao(CondicionPagoDeUnPedido.class, condicionPagoDeUnPedidoDao);
    }
    
    public void clear() {
        pedidoDaoConfig.getIdentityScope().clear();
        lineaDaoConfig.getIdentityScope().clear();
        condicionPagoDaoConfig.getIdentityScope().clear();
        condicionPagoDeUnPedidoDaoConfig.getIdentityScope().clear();
    }

    public PedidoDao getPedidoDao() {
        return pedidoDao;
    }

    public LineaDao getLineaDao() {
        return lineaDao;
    }

    public CondicionPagoDao getCondicionPagoDao() {
        return condicionPagoDao;
    }

    public CondicionPagoDeUnPedidoDao getCondicionPagoDeUnPedidoDao() {
        return condicionPagoDeUnPedidoDao;
    }

}
